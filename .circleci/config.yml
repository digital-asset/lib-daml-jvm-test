#
# Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
#

version: 2.1

executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:17.0
    resource_class: medium+

commands:
  install_sdk:
    description: "Install Daml SDK"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Install Daml SDK
          command: |
            curl -sSL https://get.daml.com/ | sh /dev/stdin << parameters.version >>
            # idea from https://circleci.com/docs/2.0/env-vars/
            >> $BASH_ENV echo 'export PATH="$HOME/.daml/bin:$PATH"'

jobs:
  sbt_verify:
    parameters:
      daml_sdk_version:
        type: string
    executor: jdk-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "build.sbt" }}
      - restore_cache:
          keys:
            - daml-{{ checksum "build.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "src/test/resources/ping-pong/daml.yaml" }}
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: "Set Java Environment"
          command: |
            echo "JAVA_HOME=${JAVA_HOME}"
            echo 'export PATH=$JAVA_HOME/bin:$PATH' >> $BASH_ENV
            which java && java -version
            which javac && javac -version
      - run:
          command: |
            sbt verify packageAll
      - store_test_results:
          path: target/test-reports
      - save_cache:
          paths:
            - ~/.m2
            - ~/.sbt
          key: m2-{{ checksum "build.sbt" }}
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "build.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "src/test/resources/ping-pong/daml.yaml" }}
  sbt_publish:
    parameters:
      daml_sdk_version:
        type: string
    executor: jdk-executor
    steps:
      - checkout
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: "Set Java Environment"
          command: |
            echo "JAVA_HOME=${JAVA_HOME}"
            echo 'export PATH=$JAVA_HOME/bin:$PATH' >> $BASH_ENV
            which java && java -version
            which javac && javac -version
      - run:
          command: |
            if git show --name-only HEAD | grep version.sbt; then
              echo "Version file changed. Creating a release."
              bash -x ./scripts/release.sh "${MAVEN_USERNAME}" "${MAVEN_PASSWORD}" "${GPG_SIGNING_KEY}" "${GPG_PASSPHRASE}"
            else
              echo "No new release. (Please make sure to use squash merge for new release.)"
            fi

workflows:
  version: 2
  build_and_test:
    jobs:
      - sbt_verify:
          daml_sdk_version: "2.5.0"
  build_and_release:
    jobs:
      - sbt_publish:
          daml_sdk_version: "2.5.0"
          context: github-refapp-repo-context
          filters:
            branches:
              only:
                - main
                - /.*publish-to-mvn-central/

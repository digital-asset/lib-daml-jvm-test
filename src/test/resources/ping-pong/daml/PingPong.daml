-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module PingPong where

template NumericTester
  with
    s: Party
    x: Decimal
    y: Numeric 4
  where
    signatory s
    controller s can
      Increment : ContractId NumericTester
        do create NumericTester with s = s; x =x + 1.0; y = y+1.2345

template Ping
  with
    sender: Party
    receiver: Party
    count: Int
  where
    signatory sender
    observer receiver

    controller receiver can
      RespondPong : ContractId Pong
        do create Pong with sender = receiver; receiver = sender; count = count + 1

template Pong
  with
    sender: Party
    receiver: Party
    count: Int
  where
    signatory sender
    observer receiver

    controller receiver can
      RespondPing : ContractId Ping
        do create Ping with sender = receiver; receiver = sender; count = count + 1


template TimedPing
  with
    expectedAfter: Time
    sender: Party
    receiver: Party
    count: Int
  where
    signatory sender
    observer receiver

    controller receiver can
      TimedPingRespondPong : ContractId Pong
        do
          now <- getTime
          assertMsg ("TimedPingRespondPong should be called after " <> show expectedAfter) $ expectedAfter < now
          create Pong with sender = receiver; receiver = sender; count = count + 1

template ArgumentPing
  with
    sender: Party
    receiver: Party
    count: Int
  where
    signatory sender
    observer receiver

    controller receiver can
      ArgumentPingRespondPong : ContractId Pong
        with
          intArg : Int
        do create Pong with sender = receiver; receiver = sender; count = count + 1

